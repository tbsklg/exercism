module PigLatin (translate) where

import Data.List (isPrefixOf)

translate :: String -> String
translate = unwords . map translate' . words
  where
    translate w
      | startsWithVowel = w ++ "ay"
      | startsWithCustomConsonants = w ++ "ay"
      | startsWithThreeConsonants = drop 3 w ++ take 3 w ++ "ay"
      | startsWithTwoConsonants = drop 2 w ++ take 2 w ++ "ay"
      | startsWithConsonant = drop 1 w ++ take 1 w ++ "ay"
      | otherwise = w
      where
        startsWithVowel = head w `elem` "aeiou"
        startsWithConsonant = head w `notElem` "aeiou"
        startsWithCustomConsonants = any (\x -> x `isPrefixOf` w) ["yt" , "xr"]
        startsWithTwoConsonants = any (\x -> x `isPrefixOf` w) ["ch", "qu", "th", "rh"]
        startsWithThreeConsonants = any (\x -> x `isPrefixOf` w) ["squ", "thr", "sch"]
